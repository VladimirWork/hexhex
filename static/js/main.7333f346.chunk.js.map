{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","hexagonSize","x","y","hexes1","GridGenerator","hexagon","hexes2","triangle","hexes3","rectangle","className","width","height","size","spacing","origin","map","hex","i","q","r","s","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mPA8BeA,E,uKAxBb,IAAMC,EAAc,CAAEC,EAAG,EAAGC,EAAG,GACzBC,EAASC,gBAAcC,QAAQ,GAC/BC,EAASF,gBAAcG,SAAS,GAChCC,EAASJ,gBAAcK,UAAU,EAAG,GACxC,OACE,qBAAKC,UAAU,MAAf,SACE,eAAC,UAAD,CAASC,MAAO,KAAMC,OAAQ,IAA9B,UACE,cAAC,SAAD,CAAQC,KAAMb,EAAac,QAAS,KAAMC,OAAQ,CAAEd,EAAG,EAAGC,EAAG,GAA7D,SACIC,EAAOa,KAAI,SAACC,EAAKC,GAAN,OAAY,cAAC,UAAD,CAAiBC,EAAGF,EAAIE,EAAGC,EAAGH,EAAIG,EAAGC,EAAGJ,EAAII,GAA9BH,QAGzC,cAAC,SAAD,CAAQL,KAAMb,EAAac,QAAS,KAAMC,OAAQ,CAAEd,GAAI,GAAIC,EAAG,GAA/D,SACII,EAAOU,KAAI,SAACC,EAAKC,GAAN,OAAY,cAAC,UAAD,CAAiBC,EAAGF,EAAIE,EAAGC,EAAGH,EAAIG,EAAGC,EAAGJ,EAAII,GAA9BH,QAGzC,cAAC,SAAD,CAAQL,KAAMb,EAAac,QAAS,KAAMC,OAAQ,CAAEd,EAAG,GAAIC,EAAG,GAA9D,SACIM,EAAOQ,KAAI,SAACC,EAAKC,GAAN,OAAY,cAAC,UAAD,CAAiBC,EAAGF,EAAIE,EAAGC,EAAGH,EAAIG,EAAGC,EAAGJ,EAAII,GAA9BH,iB,GAlBjCI,aCQHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.7333f346.chunk.js","sourcesContent":["import './App.css'\nimport React, { Component } from 'react'\nimport { GridGenerator, HexGrid, Layout, Path, Hexagon, Text, Pattern, Hex } from 'react-hexgrid'\n\nclass App extends Component {\n  render() {\n  const hexagonSize = { x: 5, y: 5 }\n  const hexes1 = GridGenerator.hexagon(2)\n  const hexes2 = GridGenerator.triangle(2)\n  const hexes3 = GridGenerator.rectangle(2, 2)\n    return (\n      <div className=\"App\">\n        <HexGrid width={1800} height={900}>\n          <Layout size={hexagonSize} spacing={1.05} origin={{ x: 0, y: 0 }}>\n            { hexes1.map((hex, i) => <Hexagon key={i} q={hex.q} r={hex.r} s={hex.s} />) }\n          </Layout>\n\n          <Layout size={hexagonSize} spacing={1.05} origin={{ x: -50, y: 0 }}>\n            { hexes2.map((hex, i) => <Hexagon key={i} q={hex.q} r={hex.r} s={hex.s} />) }\n          </Layout>\n\n          <Layout size={hexagonSize} spacing={1.05} origin={{ x: 50, y: 0 }}>\n            { hexes3.map((hex, i) => <Hexagon key={i} q={hex.q} r={hex.r} s={hex.s} />) }\n          </Layout>\n        </HexGrid>\n      </div>\n    )\n  }\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}